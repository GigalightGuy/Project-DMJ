// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel Carving



RWStructuredBuffer<float> densities;

float3 carvingPoint;
float3 halfBounds;
float carvingRange;
float Spacing;
int addRemove;


int nPointsX;
int nPointsY;
int nPointsZ;

int indexFromCoord(uint x, uint y, uint z)
{
    return z * nPointsY * nPointsX + y * nPointsX + x;
}

static const int numThreads = 8;

[numthreads(numThreads, numThreads, numThreads)]
void Carving(uint3 id : SV_DispatchThreadID)
{
    if (id.x >= nPointsX || id.y >= nPointsY || id.z >= nPointsZ)
    {
        return;
    }
    if (distance(float3(id.xyz) * Spacing - halfBounds, carvingPoint) > carvingRange)
        return;
 
    int index = indexFromCoord(id.x, id.y, id.z);
    densities[index] = addRemove;
 

}
